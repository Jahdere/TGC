src/game/Unit.cpp View
@@ -2214,6 +2214,23 @@ void Unit::CalculateDamageAbsorbAndResist(Unit* pCaster, SpellSchoolMask schoolM
  			CleanDamage cleanDamage = CleanDamage(splitted, BASE_ATTACK, MELEE_HIT_NORMAL);
  			pCaster->DealDamage(caster, splitted, &cleanDamage, DIRECT_DAMAGE, schoolMask, (*i)->GetSpellProto(), false);
  		}
+
+		// Aura of desire reflect 50% of all dmg
+		if(this->GetTypeId() != TYPEID_PLAYER && this->GetEntry() == 23419 && pCaster->HasAura(41350))
+		{
+			uint32 reflectDamage = RemainingDamage / 2;
+			SpellEntry const* DesireSpellInfo = sSpellStore.LookupEntry(41350);
+			if(reflectDamage)
+			{
+				uint32 reflect_absorb = 0;
+				pCaster->DealDamageMods(pCaster, reflectDamage, &reflect_absorb);
+
+				pCaster->SendSpellNonMeleeDamageLog(this, DesireSpellInfo->Id, reflectDamage, schoolMask, reflect_absorb, 0, false, 0, false);
+
+				CleanDamage cleanDamage = CleanDamage(reflectDamage, BASE_ATTACK, MELEE_HIT_NORMAL);
+				this->DealDamage(pCaster, reflectDamage, &cleanDamage, DIRECT_DAMAGE, schoolMask, DesireSpellInfo, false);
+			}
+		}
  	}